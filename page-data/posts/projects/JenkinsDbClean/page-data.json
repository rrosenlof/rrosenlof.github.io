{"componentChunkName":"component---src-templates-blog-js","path":"/posts/projects/JenkinsDbClean/","webpackCompilationHash":"9e2ce140aca8cf4cdad6","result":{"data":{"markdownRemark":{"html":"<p>As part of my intenrnhip</p>\n<p>Before: Only knew about Jenkins from the GreenBlue project. Didn't know how to make a Jenkins job, how to run a java class\nSpent all afternoon (7/2) and an hour or so with James and Chandler the next day (7/3).\nStarted by reading some docs about Jenkins and studying the clearance<em>routing</em>service app code. I didn't know how to make a Jenkins job until I talked with James again. I thought I would need to make a Jenkinsfile, which I could do, but I could also make a 'new item' in the Jenkins interface. I did that, and figured out how to run it once an hour. I also figured out how to check a branch out of the gitlab repo. The 'Pipeline Syntax' feature of Jenkins helped with that, as well as looking at other pipelines.\nWith that I finished half of the process. I was unsure how to run the main method of the file. I tried many variations of <code>java -cp /path/ com.package.DbMaintenance</code> but to no luck. Later, I went to talk with James again in the lab. He told me about building the project. I went and tried doing that, and it worked; <code>mvn package</code>, following what the maven docs said to do. So that built fine and everything. I realized this was compiling the project and making a class file for DbMaintenance, which I could then run. So I tried a few things, and the file to run with a similar line to my <code>java -cp...</code> from earlier. With 'isProd = false' showing up in the log. But immediately after that was a NullPointerException and a SQLException for 'No suitable driver found for [the database]'. Didn't really know what that meant. Tried a few things, but couldn't get it figured out.\nMet with Chandler and James about it the next morning. Went over/redid a few things from the first part, since I didn't compile the file. Realized that I didn't need to build the whole project everytime, but that I could just compile the single file with <code>javac -cp . com/fedex/ics/routing/utils/DbMaintenance.java</code> and then running the java -cp command to run the project. Did that, which cut down the test time a bit. Still getting the errors from before. James knew how to get around that, by adding in the .jar file to the classpath in the run command. Not exactly sure why, and I didn't know where to find that, but he did! Added that in the script, and it worked! Except that it times out because there's too much to delete. James will have to fix something with the java file.\nThey wanted me to make the same test to work with test, in addition to prod, too. Did that easily, just copying that file and removing the -p tag at the end of the run command we had added. And that one worked great!\nLearned a lot about: Jenkins, Java files and app structure, shell, git </p>","frontmatter":{"title":"Blue-Green Deployment","category":"projects"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/projects/JenkinsDbClean/"}}}