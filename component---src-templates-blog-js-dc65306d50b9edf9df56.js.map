{"version":3,"sources":["webpack:///./src/templates/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","post","data","markdownRemark","cat","frontmatter","category","a","createElement","title","class","dangerouslySetInnerHTML","__html","html","to","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","ListLink","props","react_default","style","display","marginRight","textDecoration","gatsby_browser_entry","children","Header","siteTitle","margin","marginBottom","marginTop","maxWidth","padding","backgroundColor","textShadow","backgroundImage","listStyle","float","header_ListLink","defaultProps","Layout","_856328897","Fragment","Helmet","charSet","header","site","siteMetadata","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-templates-blog-js-dc65306d50b9edf9df56.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const cat = post.frontmatter.category\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div class=\"blog-post\" dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n      View more posts about my <Link to={cat}>{cat}</Link>\n      <br/>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        category\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem`, textDecoration: `underline` }}>\n      <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <header style={{ \n    margin: `1.5rem auto`,\n    marginBottom: `1.5rem`,\n    marginTop: `0`,\n    maxWidth: 800,\n    padding: `1.45rem 1.0875rem`,\n    backgroundColor: `#e6e6e6`\n    }}\n  >\n    <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n        <h3 style={{ display: `inline` }}>Ross Rosenlof</h3>\n    </Link>\n    <ul style={{ listStyle: `none`, float: 'right' }}>\n        <ListLink to=\"/work/\">Work</ListLink>\n        <ListLink to=\"/school/\">School</ListLink>\n        <ListLink to=\"/projects/\">Projects</ListLink>\n        {/* <ListLink to=\"/hobbies/\">Hobbies</ListLink> */}\n    </ul>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Ross Rosenlof</title>\n      </Helmet>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `2.5rem auto`,\n          maxWidth: 600,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <hr></hr>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}