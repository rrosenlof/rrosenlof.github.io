{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","react_default","a","createElement","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NotFoundPage","layout","seo","gatsby_browser_entry","to","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","ListLink","props","style","display","marginRight","textDecoration","children","Header","siteTitle","margin","marginBottom","marginTop","maxWidth","padding","backgroundColor","textShadow","backgroundImage","listStyle","float","header_ListLink","Layout","_856328897","Fragment","Helmet","charSet","header","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-404-js-c1e53abec35d7c6e5532.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>Sorry, this page does not exist.</p>\r\n    <p>Try going back <Link to=\"/\">home</Link></p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst ListLink = props => (\r\n  <li style={{ display: `inline-block`, marginRight: `1rem`, textDecoration: `underline` }}>\r\n      <Link to={props.to}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header style={{ \r\n    margin: `1.5rem auto`,\r\n    marginBottom: `1.5rem`,\r\n    marginTop: `0`,\r\n    maxWidth: 800,\r\n    padding: `1.45rem 1.0875rem`,\r\n    backgroundColor: `#e6e6e6`\r\n    }}\r\n  >\r\n    <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\r\n        <h3 style={{ display: `inline` }}>Ross Rosenlof</h3>\r\n    </Link>\r\n    <ul style={{ listStyle: `none`, float: 'right' }}>\r\n        <ListLink to=\"/work/\">Work</ListLink>\r\n        <ListLink to=\"/school/\">School</ListLink>\r\n        <ListLink to=\"/projects/\">Projects</ListLink>\r\n        {/* <ListLink to=\"/hobbies/\">Hobbies</ListLink> */}\r\n    </ul>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport Header from \"./header\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Ross Rosenlof</title>\r\n      </Helmet>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `2.5rem auto`,\r\n          maxWidth: 600,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <hr></hr>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}